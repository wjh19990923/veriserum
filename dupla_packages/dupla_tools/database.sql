-- MySQL Script generated by MySQL Workbench
-- Mon 07 Jun 2021 08:45:35 AM CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lmb_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lmb_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lmb_db` DEFAULT CHARACTER SET utf8 ;
USE `lmb_db` ;

-- -----------------------------------------------------
-- Table `lmb_db`.`subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`subjects` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `gender` ENUM('female', 'male') NOT NULL,
  `birthdate` DATETIME GENERATED ALWAYS AS () VIRTUAL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`studies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`studies` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_path` VARCHAR(255) NOT NULL COMMENT 'full server path to the directory where the images are held',
  `name` VARCHAR(45) NOT NULL COMMENT 'short name of the study',
  `description` TEXT NOT NULL COMMENT 'and whatever else we want',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `data_path_UNIQUE` (`data_path` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`trials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`trials` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `study_id` INT UNSIGNED NOT NULL COMMENT 'what study does this belong to?',
  `subject_id` INT UNSIGNED NOT NULL,
  `task` ENUM('gait', 'stair descent') NOT NULL,
  `start_time` DATETIME NOT NULL COMMENT 'could be overall starttime. bit redundant, as we can get that information from the first measurement timestamp. but perhaps there is a good reason to have an overall starttime?',
  `end_time` DATETIME NOT NULL,
  `radiation_mSv` FLOAT UNSIGNED NOT NULL COMMENT 'in mSv',
  `vicon_path` VARCHAR(45) NULL COMMENT 'filename of the raw vicon file, interpreted with respect to studies.data_path',
  `kV_fs` INT UNSIGNED NOT NULL,
  `mA_fs` INT UNSIGNED NOT NULL,
  `exposure_time_fs` FLOAT NOT NULL COMMENT 'How long the camera shutter is open',
  `kV_bs` INT UNSIGNED NOT NULL,
  `mA_bs` INT UNSIGNED NOT NULL,
  `exposure_time_bs` FLOAT NOT NULL COMMENT 'How long the camera shutter is open',
  PRIMARY KEY (`id`),
  INDEX `subj_ind_idx` (`subject_id` ASC) VISIBLE,
  INDEX `study_id_idx` (`study_id` ASC) VISIBLE,
  CONSTRAINT `subj_ind`
    FOREIGN KEY (`subject_id`)
    REFERENCES `lmb_db`.`subjects` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `study_id`
    FOREIGN KEY (`study_id`)
    REFERENCES `lmb_db`.`studies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`measurements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`measurements` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `trials_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL COMMENT 'what does the argument do here?\nsaved in the timezone of the mysql server?\nwhat time is this? camera time?',
  `img_fs` VARCHAR(45) NOT NULL COMMENT 'filename of the image\nrelative to \"studies.img_path\"',
  `img_bs` VARCHAR(45) NOT NULL COMMENT 'filename of the image\nrelative to \"studies.img_path\"',
  PRIMARY KEY (`id`),
  INDEX `trials_id_key_idx` (`trials_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `trials_id_key`
    FOREIGN KEY (`trials_id`)
    REFERENCES `lmb_db`.`trials` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`operators`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`operators` (
  `id` INT UNSIGNED NOT NULL,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`anatomies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`anatomies` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `subject_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `path` VARCHAR(255) NOT NULL COMMENT 'path to anatomy data, relative to study data_path',
  `dtype` ENUM('stl') NOT NULL COMMENT 'e.g. dicom or stl or whatever',
  PRIMARY KEY (`id`),
  INDEX `subj_ind_idx` (`subject_id` ASC) VISIBLE,
  CONSTRAINT `subj_ind`
    FOREIGN KEY (`subject_id`)
    REFERENCES `lmb_db`.`subjects` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`poses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`poses` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `measurement_id` INT UNSIGNED NOT NULL COMMENT 'connects to measurements.id',
  `anatomy_id` INT UNSIGNED NOT NULL COMMENT 'connects to anatomies.id to tell us whether the pose belongs to knee or femur or something else?',
  `datetime` DATETIME NOT NULL COMMENT 'when was this pose estimation done?',
  `tx` FLOAT NOT NULL,
  `ty` FLOAT NOT NULL,
  `tz` FLOAT NOT NULL,
  `r0` FLOAT NOT NULL COMMENT 'quaternion scalar part',
  `r1` FLOAT NOT NULL,
  `r2` FLOAT NOT NULL,
  `r3` FLOAT NOT NULL,
  `operator_id` INT UNSIGNED NOT NULL COMMENT 'who did the pose estimation?',
  `method` ENUM('MANMATCH') NOT NULL COMMENT 'e.g. manual or \"damn_v2\"',
  `obsolete` TINYINT(1) NULL COMMENT 'set this value to True if the pose estimation is invalid (e.g. when you found a mistake)',
  `git_hash` VARCHAR(45) NULL,
  `git_repo` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `operator_id_key_idx` (`operator_id` ASC) VISIBLE,
  INDEX `measurement_id_key_idx` (`measurement_id` ASC) VISIBLE,
  INDEX `anatomy_id_key_idx` (`anatomy_id` ASC) VISIBLE,
  CONSTRAINT `operator_id_key`
    FOREIGN KEY (`operator_id`)
    REFERENCES `lmb_db`.`operators` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `measurement_id_key`
    FOREIGN KEY (`measurement_id`)
    REFERENCES `lmb_db`.`measurements` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `anatomy_id_key`
    FOREIGN KEY (`anatomy_id`)
    REFERENCES `lmb_db`.`anatomies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`calibration_measurements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`calibration_measurements` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`calibration_trials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`calibration_trials` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `trials_id` INT UNSIGNED NOT NULL COMMENT 'list of measurements.id',
  `datetime` DATETIME NOT NULL COMMENT 'saved in what timezone?',
  `kV_fs` INT UNSIGNED NOT NULL,
  `mA_fs` INT UNSIGNED NOT NULL,
  `exposure_time_fs` FLOAT UNSIGNED NOT NULL COMMENT 'How long the camera shutter is open',
  `img_fs` VARCHAR(45) NOT NULL COMMENT 'filename of the image\nrelative to \"studies.img_path\"',
  `kV_bs` INT UNSIGNED NOT NULL,
  `mA_bs` INT UNSIGNED NOT NULL,
  `exposure_time_bs` FLOAT UNSIGNED NOT NULL COMMENT 'How long the camera shutter is open',
  `img_bs` VARCHAR(45) NULL COMMENT 'filename of the image\nrelative to \"studies.img_path\"',
  `target` ENUM('grid', 'cylinder') NOT NULL COMMENT 'defines what calibration target we actually had, e.g. on a specific grid for distortion correction or with a cylinder for source-II calibration',
  PRIMARY KEY (`id`),
  INDEX `trials_key_idx` (`trials_id` ASC) VISIBLE,
  CONSTRAINT `trials_key`
    FOREIGN KEY (`trials_id`)
    REFERENCES `lmb_db`.`trials` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`source_int_calibration`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`source_int_calibration` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `calibration_trial_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL COMMENT 'when was this pose estimation done?',
  `principalp_h_fs` FLOAT NOT NULL,
  `principalp_v_fs` FLOAT NOT NULL,
  `principalp_h_bs` FLOAT NOT NULL,
  `principalp_v_bs` FLOAT NOT NULL,
  `sid_fs` FLOAT NOT NULL COMMENT 'source - intensifier distance',
  `sid_bs` FLOAT NOT NULL,
  `obsolete` TINYINT(1) NULL COMMENT 'set this value to True if the pose estimation is invalid (e.g. when you found a mistake)',
  `operator_id` INT UNSIGNED NOT NULL COMMENT 'who did the pose estimation?',
  `method` ENUM('mechanical_ground_truth', 'manual', 'whatever') NOT NULL COMMENT 'e.g. manual or \"damn_v2\"',
  `git_hash` VARCHAR(45) NOT NULL COMMENT 'hash  of gitlab commit',
  `git_repo` VARCHAR(45) NOT NULL COMMENT '\'url to gitlab\'',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `calibration_trial_id_key_idx` (`calibration_trial_id` ASC) VISIBLE,
  INDEX `operator_id_key_idx` (`operator_id` ASC) VISIBLE,
  CONSTRAINT `calibration_trial_id_key`
    FOREIGN KEY (`calibration_trial_id`)
    REFERENCES `lmb_db`.`calibration_trials` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `operator_id_key`
    FOREIGN KEY (`operator_id`)
    REFERENCES `lmb_db`.`operators` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`studyId_personal_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`studyId_personal_data` (
  `id` INT NOT NULL,
  `subject_id` INT UNSIGNED NOT NULL,
  `questionnaire_path` VARCHAR(45) NULL,
  `operation_date` DATETIME NULL,
  `studyId_personal_datacol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `subject_id_idx_idx` (`subject_id` ASC) VISIBLE,
  CONSTRAINT `subject_id_idx`
    FOREIGN KEY (`subject_id`)
    REFERENCES `lmb_db`.`subjects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`distortion_calibration`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`distortion_calibration` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `calibration_trial_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL COMMENT 'when was this pose estimation done?',
  `obsolete` TINYINT(1) NULL COMMENT 'set this value to True if the pose estimation is invalid (e.g. when you found a mistake)',
  `distortion_result` VARCHAR(45) NULL,
  `operator_id` INT UNSIGNED NOT NULL COMMENT 'who did the pose estimation?',
  `method` ENUM('mechanical_ground_truth', 'manual', 'whatever') NOT NULL COMMENT 'e.g. manual or \"damn_v2\"',
  `git_hash` VARCHAR(45) NOT NULL,
  `git_repo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `calibration_trial_key_idx` (`calibration_trial_id` ASC) VISIBLE,
  INDEX `operator_id_key_idx` (`operator_id` ASC) VISIBLE,
  UNIQUE INDEX `git_hash_UNIQUE` (`git_hash` ASC) VISIBLE,
  CONSTRAINT `calibration_trial_key`
    FOREIGN KEY (`calibration_trial_id`)
    REFERENCES `lmb_db`.`calibration_trials` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `operator_id_key`
    FOREIGN KEY (`operator_id`)
    REFERENCES `lmb_db`.`operators` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lmb_db`.`processed_vicon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lmb_db`.`processed_vicon` (
  `trial_id` INT NOT NULL,
  `processed_vicon_path` VARCHAR(45) NOT NULL COMMENT 'url to the labelled vicon data (compard to trial.vicon_path, which is the raw data), relative to studies.data_path',
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
